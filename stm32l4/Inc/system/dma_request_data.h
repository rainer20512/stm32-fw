/**
 ******************************************************************************
 * @file    dma_request_data.h
 * @author  Rainer
 * @brief   Unify the DMA channel assignments for both devices with and without
            a DMAMUX. While the first ones ( with DMAMUX ) allow the assignment
            of any request to any channel, the latter ones (w/o DMAMUX) have 
            fixed channels for specific request. These restrictions are coded
            in the first block of #defines.

            In the second block of #defines, the assigned DMA channel is always
            NULL. This means, the DMA manager in dma_handler.c can assign any
            free DMA channel to this request. User can override this by assigning
            a specific channel to that request, preferably in the 
            ...._config.h file.

            Do not edit this file to do fixed channel assignments!
            
            Implemented due to **** 004 ****
 *          second, do all the DMA interrupt handling 
 ******************************************************************************
 */

#ifndef __DMA_REQUEST_DATA_H__
#define __DMA_REQUEST_DATA_H__

#include "dev/devices.h"

#if HAS_NO_DMAMUX 
    /*
     **** 004 **** 
     * Assign DMA_Request to fixed channels as documented in the
     * RefMan chapter 11.4.7
     * Some devices ( USART1 eg ) have more than one possible
     * assignment. This is denoted by DMA_DATA1... and DMA_DATA2... resp
     */
    /* Multiple choices for ADC1..3 */
    #define DMA_DATA_ADC1               DMA_REQUEST_0, DMA1_Channel1
    #define DMA_DATA_ADC2               DMA_REQUEST_0, DMA1_Channel2
    #define DMA_DATA_ADC3               DMA_REQUEST_0, DMA1_Channel3
//    #define DMA_DATA_ADC1               DMA_REQUEST_0, DMA2_Channel3
//    #define DMA_DATA_ADC2               DMA_REQUEST_0, DMA2_Channel4
//    #define DMA_DATA_ADC3               DMA_REQUEST_0, DMA2_Channel5

    /* Multiple choices for USART1 */
    #define DMA_DATA_USART1_TX          DMA_REQUEST_2, DMA1_Channel4 
    #define DMA_DATA_USART1_RX          DMA_REQUEST_2, DMA1_Channel5 
//    #define DMA_DATA_USART1_RX          DMA_REQUEST_2, DMA2_Channel6 
//    #define DMA_DATA_USART1_TX          DMA_REQUEST_2, DMA2_Channel7 
    #define DMA_DATA_USART2_TX          DMA_REQUEST_2, DMA1_Channel7 
    #define DMA_DATA_USART2_RX          DMA_REQUEST_2, DMA1_Channel6 
    #define DMA_DATA_USART3_TX          DMA_REQUEST_2, DMA1_Channel2 
    #define DMA_DATA_USART3_RX          DMA_REQUEST_2, DMA1_Channel3 
    #define DMA_DATA_UART4_TX           DMA_REQUEST_2, DMA2_Channel3 
    #define DMA_DATA_UART4_RX           DMA_REQUEST_2, DMA2_Channel5 
    #define DMA_DATA_UART5_TX           DMA_REQUEST_2, DMA2_Channel1 
    #define DMA_DATA_UART5_RX           DMA_REQUEST_2, DMA2_Channel2 
    #define DMA_DATA_LPUART1_TX         DMA_REQUEST_4, DMA2_Channel6 
    #define DMA_DATA_LPUART1_RX         DMA_REQUEST_4, DMA2_Channel7 

    #define DMA_DATA_I2C1_TX            DMA_REQUEST_3, DMA1_Channel6
    #define DMA_DATA_I2C1_RX            DMA_REQUEST_3, DMA1_Channel7
//    #define DMA_DATA_I2C1_TX            DMA_REQUEST_5, DMA2_Channel7
//    #define DMA_DATA_I2C1_RX            DMA_REQUEST_5, DMA2_Channel6
    #define DMA_DATA_I2C2_TX            DMA_REQUEST_3, DMA1_Channel4
    #define DMA_DATA_I2C2_RX            DMA_REQUEST_3, DMA1_Channel5
    #define DMA_DATA_I2C3_TX            DMA_REQUEST_3, DMA1_Channel2
    #define DMA_DATA_I2C3_RX            DMA_REQUEST_3, DMA1_Channel3
    #define DMA_DATA_I2C4_TX            DMA_REQUEST_0, DMA2_Channel2
    #define DMA_DATA_I2C4_RX            DMA_REQUEST_0, DMA2_Channel1

    #define DMA_DATA_SPI1_TX            DMA_REQUEST_1, DMA1_Channel3
    #define DMA_DATA_SPI1_RX            DMA_REQUEST_1, DMA1_Channel2
//    #define DMA_DATA_SPI1_TX            DMA_REQUEST_4, DMA2_Channel4
//    #define DMA_DATA_SPI1_RX            DMA_REQUEST_4, DMA2_Channel3
    #define DMA_DATA_SPI2_TX            DMA_REQUEST_1, DMA1_Channel5
    #define DMA_DATA_SPI2_RX            DMA_REQUEST_1, DMA1_Channel4
    #define DMA_DATA_SPI3_TX            DMA_REQUEST_3, DMA2_Channel2
    #define DMA_DATA_SPI3_RX            DMA_REQUEST_3, DMA2_Channel1
    
    #define DMA_DATA_QSPI1              DMA_REQUEST_5, DMA1_Channel5
//    #define DMA_DATA_QSPI1              DMA_REQUEST_3, DMA2_Channel7

#else
    /*
     **** 004 **** 
     * Assign DMA_Requests to no DMA channel. This means, the DMA
     * channel manager in dma_handler.c can choose any free channel
     * for this request. If you want to assign a fixed DMA channel
     * you can specify this in the devices ...config.h file.
     *
     * Do not edit here !
     */
    #define DMA_DATA_ADC1               DMA_REQUEST_ADC1,       NULL 
    #define DMA_DATA_ADC2               DMA_REQUEST_ADC2,       NULL 
    #define DMA_DATA_ADC3               DMA_REQUEST_ADC3,       NULL 

    #define DMA_DATA_USART1_TX          DMA_REQUEST_USART1_TX,  NULL 
    #define DMA_DATA_USART1_RX          DMA_REQUEST_USART1_RX,  NULL 
    #define DMA_DATA_USART2_TX          DMA_REQUEST_USART2_TX,  NULL
    #define DMA_DATA_USART2_RX          DMA_REQUEST_USART2_RX,  NULL 
    #define DMA_DATA_USART3_TX          DMA_REQUEST_USART3_TX,  NULL 
    #define DMA_DATA_USART3_RX          DMA_REQUEST_USART3_RX,  NULL 
    #define DMA_DATA_UART4_TX           DMA_REQUEST_UART4_TX,   NULL 
    #define DMA_DATA_UART4_RX           DMA_REQUEST_UART4_RX,   NULL 
    #define DMA_DATA_UART5_TX           DMA_REQUEST_UART5_TX,   NULL 
    #define DMA_DATA_UART5_RX           DMA_REQUEST_UART4_RX,   NULL 
    #define DMA_DATA_LPUART1_TX         DMA_REQUEST_LPUART1_TX, NULL 
    #define DMA_DATA_LPUART1_RX         DMA_REQUEST_LPUART1_RX, NULL 

    #define DMA_DATA_I2C1_TX            DMA_REQUEST_I2C1_TX,    NULL
    #define DMA_DATA_I2C1_RX            DMA_REQUEST_I2C1_RX,    NULL
    #define DMA_DATA_I2C2_TX            DMA_REQUEST_I2C2_TX,    NULL
    #define DMA_DATA_I2C2_RX            DMA_REQUEST_I2C2_RX,    NULL
    #define DMA_DATA_I2C3_TX            DMA_REQUEST_I2C3_TX,    NULL
    #define DMA_DATA_I2C3_RX            DMA_REQUEST_I2C3_RX,    NULL
    #define DMA_DATA_I2C4_TX            DMA_REQUEST_I2C4_TX,    NULL
    #define DMA_DATA_I2C4_RX            DMA_REQUEST_I2C4_RX,    NULL

    #define DMA_DATA_SPI1_TX            DMA_REQUEST_SPI1_TX,    NULL
    #define DMA_DATA_SPI1_RX            DMA_REQUEST_SPI1_RX,    NULL
    #define DMA_DATA_SPI2_TX            DMA_REQUEST_SPI2_TX,    NULL
    #define DMA_DATA_SPI2_RX            DMA_REQUEST_SPI2_RX,    NULL
    #define DMA_DATA_SPI3_TX            DMA_REQUEST_SPI3_TX,    NULL
    #define DMA_DATA_SPI3_RX            DMA_REQUEST_SPI3_RX,    NULL

    #define DMA_DATA_QSPI1              DMA_REQUEST_QSPI1,      NULL
#endif

/* 
 * Some macros to access the request and channel portion from the 
 * DMA_DATA... definitions
 */
#define _EVAL_LISTA(A,B)            (A)
#define _EVAL_LISTB(A,B)            (B)
#define GET_DMA_REQUEST(LIST)       _EVAL_LISTA(LIST)    
#define GET_DMA_CHANNEL(LIST)       _EVAL_LISTB(LIST)    

#endif /* __DMA_REQUEST_DATA_H__ */
This file contains changes, that have been inserted into common CubeFW sources  RHB 05.08.2020
Within the sources, the changes are marked as **** <num> ****
<num> is always three digits long
----------------------------------------------------------------------------------------------

001 Add an activity LED to non-sleep FreeRTOS
    A) in inc/FreeRTOSConfig.h: Add these lines
        + /**** 001 **** RHB Added 
        +  * implementation of activity LED 
        +  */
        + #define configUSE_RTOS_ACTIVITY_LED             1
        + 
        + /**** 001 **** RHB ADDED 
        +  * Use gn LED as "activity LED" when using FreeRTOS
        +  * LED number according to gpio_config.h"
        +  */
        + #define configACTIVITY_LED                      0           
    B) in FreeRTOS-file tasks.c:
       i. add include file
              + /**** 001 **** neccessary for implementation of activity LED */
              + #if configUSE_RTOS_ACTIVITY_LED > 0
              +     #include "dev/io_dev.h"
              + #endif 
       ii. switch off activity LED whenever IDLE task is running, add in function portTASK_FUNCTION:
		/* See if any tasks have deleted themselves - if so then the idle task
		is responsible for freeing the deleted task's TCB and stack. */
		prvCheckTasksWaitingTermination();
                + #if  configUSE_RTOS_ACTIVITY_LED > 0
                +     IO_UserLedOff(configACTIVITY_LED);       /**** 001 **** switch off activity LED */
                + #endif
       iii. Switch on activity LED in any context switch, add in function vTaskSwitchContext:
              if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
              {
                      ...
              }
              else
              {
                + #if  configUSE_RTOS_ACTIVITY_LED > 0
                +     IO_UserLedOn(configACTIVITY_LED); /**** 001 **** Switch on activity LED */
                + #endif

002 Configure a timer for runtime stats
    A) in inc/FreeRTOSConfig.h: Add these lines
        + /**** 002 ****
        +  * RHB added due to configGENERATE_RUN_TIME_STATS
        +  * FreeRTOS does not have to configure a timer
        +  */
        + #define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()
        + 
        + /* basic timer counts microseconds */
        + #define portGET_RUN_TIME_COUNTER_VALUE()        (BASTMR_GetMicrosecond(&BASTIM_HANDLE)/100)

    B) also in inc/FreeRTOSConfig.h:
        - set configGENERATE_RUN_TIME_STATS to 1

*** Update to STM32H7Cube Firmware V1.9
    - Redo adaptions of 001 and 002 in tasks.c and FreeRTOSConfig.h
    - minor changes in STM's USB-Device-Library

003 BDMA needs memory in D3 domain ( SRAM4 ). To achieve this,
    64k SRAM memory is divided into two 32k sections SRAM4CM4 and SRAM4CM7
    
    Whenever BDMA is used, the DMA memory has to reside in SRAM4.
    Moreover, when used by CM7, this memory has to be uncached, too.

    The additional code to use BDMA can be disabled by setting 
    USE_BDMA to 0 in config-file.

005 Unify the PLL programming / handling for all three PLLs in ppl.c, pll.h and pll_config.h
    ToDo: Restart PLLs after STOP when SYSCLK source is not a PLL


006 In HAL-Driver-Directory stm327_hal_sd.c/stm327_hal_sd.h:
    made "SD_SendStatus" public. 
    !! has to be redone when changing the HAL-Firmware-Version !!

007 USB MSC driver implementation with SDRAM needs uncached memory in AXIS RAM
    therefore the area .axisdmamem was added as uncached area in AXIS RAM

*** Update to STM32H7Cube Firmware V1.11
    Redo adaptions of 001 and 002: 
    - for 001 Repeat 001
    - for 002 Insert this in tasks.c:
    
    /*
     ***** 002 *****
     * Due to useage of Basictimer as Tick-Timer
     */
    #include "dev/timer_dev.h"

    *********** Note: Switch to FW V1.11 ABANDONED *************************
    ** due to major changes in stm32h7xx_hal_eth.c which will not compile **
    ************************************************************************
    
    Rollback To V1.9